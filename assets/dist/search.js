"use strict";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Search page
 */
(function (window, document) {
  var key = 'q';

  var getQuery = function getQuery() {
    var hashes = window.location.search.slice(1).split('&');
    return hashes.reduce(function (params, hash) {
      var key = hash.split('=')[0];
      var value = hash.split('=')[1];
      return Object.assign(params, _defineProperty({}, key, decodeURIComponent(value)));
    }, {});
  };

  var compile = function compile(source) {
    return function (context) {
      /* eslint-disable no-new-func */
      var props = Object.keys(context).join(', ');
      return new Function("{ ".concat(props, " }"), "return `".concat(source, "`"))(context);
    };
  }; // 1. has search results container


  var resultElement = document.getElementById('results');
  if (!resultElement) return; // 2. enabled ghost api

  if (!ghost) return; // 3. has search querystring named q

  var query = getQuery()[key];
  if (!query) return; // 4. result item template

  var itemTmplSource = document.getElementById('item_tmpl');
  if (!itemTmplSource) return;
  var itemTemplate = compile(itemTmplSource.innerHTML); // replace title

  var titleElement = document.querySelector('.site-title');

  if (titleElement) {
    titleElement.innerHTML = titleElement.innerHTML.replace('%', query);
  }

  document.title = document.title.replace('%', query);
  var url = ghost.url.api('posts', {
    fields: ['url', 'title', 'feature_image'],
    formats: 'plaintext',
    absolute_urls: true
  });
  fetch(url).then(function (response) {
    return response.json();
  }).then(function (resources) {
    return fuzzysort.goAsync(query, resources.posts, {
      keys: ['title'],
      threshold: -3500,
      allowTypo: false
    });
  }).then(function (result) {
    resultElement.innerHTML = result.map(function (i) {
      return i.obj;
    }).map(itemTemplate).join('');
  }).catch(function (error) {
    return console.error('Fetch Error =\n', error);
  });
})(window, document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlYXJjaC5qcyJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJkb2N1bWVudCIsImtleSIsImdldFF1ZXJ5IiwiaGFzaGVzIiwibG9jYXRpb24iLCJzZWFyY2giLCJzbGljZSIsInNwbGl0IiwicmVkdWNlIiwicGFyYW1zIiwiaGFzaCIsInZhbHVlIiwiT2JqZWN0IiwiYXNzaWduIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiY29tcGlsZSIsInNvdXJjZSIsImNvbnRleHQiLCJwcm9wcyIsImtleXMiLCJqb2luIiwiRnVuY3Rpb24iLCJyZXN1bHRFbGVtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJnaG9zdCIsInF1ZXJ5IiwiaXRlbVRtcGxTb3VyY2UiLCJpdGVtVGVtcGxhdGUiLCJpbm5lckhUTUwiLCJ0aXRsZUVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicmVwbGFjZSIsInRpdGxlIiwidXJsIiwiYXBpIiwiZmllbGRzIiwiZm9ybWF0cyIsImFic29sdXRlX3VybHMiLCJmZXRjaCIsInRoZW4iLCJyZXNwb25zZSIsImpzb24iLCJyZXNvdXJjZXMiLCJmdXp6eXNvcnQiLCJnb0FzeW5jIiwicG9zdHMiLCJ0aHJlc2hvbGQiLCJhbGxvd1R5cG8iLCJyZXN1bHQiLCJtYXAiLCJpIiwib2JqIiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7O0FBSUEsQ0FBQyxVQUFVQSxNQUFWLEVBQWtCQyxRQUFsQixFQUE0QjtBQUMzQixNQUFNQyxHQUFHLEdBQUcsR0FBWjs7QUFFQSxNQUFNQyxRQUFRLEdBQUcsU0FBWEEsUUFBVyxHQUFNO0FBQ3JCLFFBQU1DLE1BQU0sR0FBR0osTUFBTSxDQUFDSyxRQUFQLENBQWdCQyxNQUFoQixDQUF1QkMsS0FBdkIsQ0FBNkIsQ0FBN0IsRUFBZ0NDLEtBQWhDLENBQXNDLEdBQXRDLENBQWY7QUFDQSxXQUFPSixNQUFNLENBQUNLLE1BQVAsQ0FBYyxVQUFDQyxNQUFELEVBQVNDLElBQVQsRUFBa0I7QUFD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QSxhQUFJQSxDQUFDLENBQUNDLEdBQU47QUFBQSxLQUFaLEVBQXVCRixHQUF2QixDQUEyQnRCLFlBQTNCLEVBQXlDUCxJQUF6QyxDQUE4QyxFQUE5QyxDQUExQjtBQUNELEdBVEgsRUFVR2dDLEtBVkgsQ0FVUyxVQUFBQyxLQUFLO0FBQUEsV0FBSUMsT0FBTyxDQUFDRCxLQUFSLENBQWMsaUJBQWQsRUFBaUNBLEtBQWpDLENBQUo7QUFBQSxHQVZkO0FBV0QsQ0F2REQsRUF1REd0RCxNQXZESCxFQXVEV0MsUUF2RFgiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNlYXJjaCBwYWdlXG4gKi9cblxuKGZ1bmN0aW9uICh3aW5kb3csIGRvY3VtZW50KSB7XG4gIGNvbnN0IGtleSA9ICdxJ1xuXG4gIGNvbnN0IGdldFF1ZXJ5ID0gKCkgPT4ge1xuICAgIGNvbnN0IGhhc2hlcyA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guc2xpY2UoMSkuc3BsaXQoJyYnKVxuICAgIHJldHVybiBoYXNoZXMucmVkdWNlKChwYXJhbXMsIGhhc2gpID0+IHtcbiAgICAgIGNvbnN0IGtleSA9IGhhc2guc3BsaXQoJz0nKVswXVxuICAgICAgY29uc3QgdmFsdWUgPSBoYXNoLnNwbGl0KCc9JylbMV1cbiAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHBhcmFtcywgeyBba2V5XTogZGVjb2RlVVJJQ29tcG9uZW50KHZhbHVlKSB9KVxuICAgIH0sIHt9KVxuICB9XG5cbiAgY29uc3QgY29tcGlsZSA9IHNvdXJjZSA9PiB7XG4gICAgcmV0dXJuIGNvbnRleHQgPT4ge1xuICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tbmV3LWZ1bmMgKi9cbiAgICAgIGNvbnN0IHByb3BzID0gT2JqZWN0LmtleXMoY29udGV4dCkuam9pbignLCAnKVxuICAgICAgcmV0dXJuIG5ldyBGdW5jdGlvbihgeyAke3Byb3BzfSB9YCwgYHJldHVybiBcXGAke3NvdXJjZX1cXGBgKShjb250ZXh0KVxuICAgIH1cbiAgfVxuXG4gIC8vIDEuIGhhcyBzZWFyY2ggcmVzdWx0cyBjb250YWluZXJcbiAgY29uc3QgcmVzdWx0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN1bHRzJylcbiAgaWYgKCFyZXN1bHRFbGVtZW50KSByZXR1cm5cblxuICAvLyAyLiBlbmFibGVkIGdob3N0IGFwaVxuICBpZiAoIWdob3N0KSByZXR1cm5cblxuICAvLyAzLiBoYXMgc2VhcmNoIHF1ZXJ5c3RyaW5nIG5hbWVkIHFcbiAgY29uc3QgcXVlcnkgPSBnZXRRdWVyeSgpW2tleV1cbiAgaWYgKCFxdWVyeSkgcmV0dXJuXG5cbiAgLy8gNC4gcmVzdWx0IGl0ZW0gdGVtcGxhdGVcbiAgY29uc3QgaXRlbVRtcGxTb3VyY2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaXRlbV90bXBsJylcbiAgaWYgKCFpdGVtVG1wbFNvdXJjZSkgcmV0dXJuXG4gIGNvbnN0IGl0ZW1UZW1wbGF0ZSA9IGNvbXBpbGUoaXRlbVRtcGxTb3VyY2UuaW5uZXJIVE1MKVxuXG4gIC8vIHJlcGxhY2UgdGl0bGVcbiAgY29uc3QgdGl0bGVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNpdGUtdGl0bGUnKVxuICBpZiAodGl0bGVFbGVtZW50KSB7XG4gICAgdGl0bGVFbGVtZW50LmlubmVySFRNTCA9IHRpdGxlRWxlbWVudC5pbm5lckhUTUwucmVwbGFjZSgnJScsIHF1ZXJ5KVxuICB9XG4gIGRvY3VtZW50LnRpdGxlID0gZG9jdW1lbnQudGl0bGUucmVwbGFjZSgnJScsIHF1ZXJ5KVxuXG4gIGNvbnN0IHVybCA9IGdob3N0LnVybC5hcGkoJ3Bvc3RzJywgeyBmaWVsZHM6IFsndXJsJywgJ3RpdGxlJywgJ2ZlYXR1cmVfaW1hZ2UnXSwgZm9ybWF0czogJ3BsYWludGV4dCcsIGFic29sdXRlX3VybHM6IHRydWUgfSlcbiAgZmV0Y2godXJsKVxuICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgICAudGhlbihyZXNvdXJjZXMgPT4gZnV6enlzb3J0LmdvQXN5bmMocXVlcnksIHJlc291cmNlcy5wb3N0cywge1xuICAgICAga2V5czogWyAndGl0bGUnIF0sXG4gICAgICB0aHJlc2hvbGQ6IC0zNTAwLFxuICAgICAgYWxsb3dUeXBvOiBmYWxzZVxuICAgIH0pKVxuICAgIC50aGVuKHJlc3VsdCA9PiB7XG4gICAgICByZXN1bHRFbGVtZW50LmlubmVySFRNTCA9IHJlc3VsdC5tYXAoaSA9PiBpLm9iaikubWFwKGl0ZW1UZW1wbGF0ZSkuam9pbignJylcbiAgICB9KVxuICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKCdGZXRjaCBFcnJvciA9XFxuJywgZXJyb3IpKVxufSkod2luZG93LCBkb2N1bWVudClcbiJdLCJmaWxlIjoic2VhcmNoLmpzIn0=
