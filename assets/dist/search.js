"use strict";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Search page
 */
(function (window, document) {
  var key = 'q';

  var getQuery = function getQuery() {
    var hashes = window.location.search.slice(1).split('&');
    return hashes.reduce(function (params, hash) {
      var key = hash.split('=')[0];
      var value = hash.split('=')[1];
      return Object.assign(params, _defineProperty({}, key, decodeURIComponent(value)));
    }, {});
  };

  var compile = function compile(source) {
    return function (context) {
      /* eslint-disable no-new-func */
      var props = Object.keys(context).join(', ');
      return new Function("{ ".concat(props, " }"), "return `".concat(source, "`"))(context);
    };
  }; // 1. has search results container


  var resultElement = document.getElementById('results');
  if (!resultElement) return; // 2. enabled ghost api

  if (!window.ghost) return; // 3. has search querystring named q

  var query = getQuery()[key];
  if (!query) return; // 4. result item template

  var itemTmplSource = document.getElementById('item_tmpl');
  if (!itemTmplSource) return;
  var itemTemplate = compile(itemTmplSource.innerHTML); // replace title

  var titleElement = document.querySelector('.site-title');

  if (titleElement) {
    titleElement.innerHTML = titleElement.innerHTML.replace('%', query);
  }

  document.title = document.title.replace('%', query);
  var url = window.ghost.url.api('posts', {
    fields: ['url', 'title', 'feature_image'],
    formats: 'plaintext',
    absolute_urls: true
  });
  window.fetch(url).then(function (response) {
    return response.json();
  }).then(function (resources) {
    return window.fuzzysort.goAsync(query, resources.posts, {
      keys: ['title'],
      threshold: -3500,
      allowTypo: false
    });
  }).then(function (result) {
    resultElement.innerHTML = result.map(function (i) {
      return i.obj;
    }).map(itemTemplate).join('');
  }).catch(function (error) {
    return console.error('Fetch Error =\n', error);
  });
})(window, document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlYXJjaC5qcyJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJkb2N1bWVudCIsImtleSIsImdldFF1ZXJ5IiwiaGFzaGVzIiwibG9jYXRpb24iLCJzZWFyY2giLCJzbGljZSIsInNwbGl0IiwicmVkdWNlIiwicGFyYW1zIiwiaGFzaCIsInZhbHVlIiwiT2JqZWN0IiwiYXNzaWduIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiY29tcGlsZSIsInNvdXJjZSIsImNvbnRleHQiLCJwcm9wcyIsImtleXMiLCJqb2luIiwiRnVuY3Rpb24iLCJyZXN1bHRFbGVtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJnaG9zdCIsInF1ZXJ5IiwiaXRlbVRtcGxTb3VyY2UiLCJpdGVtVGVtcGxhdGUiLCJpbm5lckhUTUwiLCJ0aXRsZUVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicmVwbGFjZSIsInRpdGxlIiwidXJsIiwiYXBpIiwiZmllbGRzIiwiZm9ybWF0cyIsImFic29sdXRlX3VybHMiLCJmZXRjaCIsInRoZW4iLCJyZXNwb25zZSIsImpzb24iLCJyZXNvdXJjZXMiLCJmdXp6eXNvcnQiLCJnb0FzeW5jIiwicG9zdHMiLCJ0aHJlc2hvbGQiLCJhbGxvd1R5cG8iLCJyZXN1bHQiLCJtYXAiLCJpIiwib2JqIiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7O0FBSUEsQ0FBQyxVQUFVQSxNQUFWLEVBQWtCQyxRQUFsQixFQUE0QjtBQUMzQixNQUFNQyxHQUFHLEdBQUcsR0FBWjs7QUFFQSxNQUFNQyxRQUFRLEdBQUcsU0FBWEEsUUFBVyxHQUFNO0FBQ3JCLFFBQU1DLE1BQU0sR0FBR0osTUFBTSxDQUFDSyxRQUFQLENBQWdCQyxNQUFoQixDQUF1QkMsS0FBdkIsQ0FBNkIsQ0FBN0IsRUFBZ0NDLEtBQWhDLENBQXNDLEdBQXRDLENBQWY7QUFDQSxXQUFPSixNQUFNLENBQUNLLE1BQVAsQ0FBYyxVQUFDQyxNQUFELEVBQVNDLElBQVQsRUFBa0I7QUFD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Q0FBQ00sU0FBZCxHQUEwQm9CLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLFVBQUFDLENBQUM7QUFBQSxhQUFJQSxDQUFDLENBQUNDLEdBQU47QUFBQSxLQUFaLEVBQXVCRixHQUF2QixDQUEyQnRCLFlBQTNCLEVBQXlDUCxJQUF6QyxDQUE4QyxFQUE5QyxDQUExQjtBQUNELEdBVEgsRUFVR2dDLEtBVkgsQ0FVUyxVQUFBQyxLQUFLO0FBQUEsV0FBSUMsT0FBTyxDQUFDRCxLQUFSLENBQWMsaUJBQWQsRUFBaUNBLEtBQWpDLENBQUo7QUFBQSxHQVZkO0FBV0QsQ0F2REQsRUF1REd0RCxNQXZESCxFQXVEV0MsUUF2RFgiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNlYXJjaCBwYWdlXG4gKi9cblxuKGZ1bmN0aW9uICh3aW5kb3csIGRvY3VtZW50KSB7XG4gIGNvbnN0IGtleSA9ICdxJ1xuXG4gIGNvbnN0IGdldFF1ZXJ5ID0gKCkgPT4ge1xuICAgIGNvbnN0IGhhc2hlcyA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guc2xpY2UoMSkuc3BsaXQoJyYnKVxuICAgIHJldHVybiBoYXNoZXMucmVkdWNlKChwYXJhbXMsIGhhc2gpID0+IHtcbiAgICAgIGNvbnN0IGtleSA9IGhhc2guc3BsaXQoJz0nKVswXVxuICAgICAgY29uc3QgdmFsdWUgPSBoYXNoLnNwbGl0KCc9JylbMV1cbiAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHBhcmFtcywgeyBba2V5XTogZGVjb2RlVVJJQ29tcG9uZW50KHZhbHVlKSB9KVxuICAgIH0sIHt9KVxuICB9XG5cbiAgY29uc3QgY29tcGlsZSA9IHNvdXJjZSA9PiB7XG4gICAgcmV0dXJuIGNvbnRleHQgPT4ge1xuICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tbmV3LWZ1bmMgKi9cbiAgICAgIGNvbnN0IHByb3BzID0gT2JqZWN0LmtleXMoY29udGV4dCkuam9pbignLCAnKVxuICAgICAgcmV0dXJuIG5ldyBGdW5jdGlvbihgeyAke3Byb3BzfSB9YCwgYHJldHVybiBcXGAke3NvdXJjZX1cXGBgKShjb250ZXh0KVxuICAgIH1cbiAgfVxuXG4gIC8vIDEuIGhhcyBzZWFyY2ggcmVzdWx0cyBjb250YWluZXJcbiAgY29uc3QgcmVzdWx0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN1bHRzJylcbiAgaWYgKCFyZXN1bHRFbGVtZW50KSByZXR1cm5cblxuICAvLyAyLiBlbmFibGVkIGdob3N0IGFwaVxuICBpZiAoIXdpbmRvdy5naG9zdCkgcmV0dXJuXG5cbiAgLy8gMy4gaGFzIHNlYXJjaCBxdWVyeXN0cmluZyBuYW1lZCBxXG4gIGNvbnN0IHF1ZXJ5ID0gZ2V0UXVlcnkoKVtrZXldXG4gIGlmICghcXVlcnkpIHJldHVyblxuXG4gIC8vIDQuIHJlc3VsdCBpdGVtIHRlbXBsYXRlXG4gIGNvbnN0IGl0ZW1UbXBsU291cmNlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2l0ZW1fdG1wbCcpXG4gIGlmICghaXRlbVRtcGxTb3VyY2UpIHJldHVyblxuICBjb25zdCBpdGVtVGVtcGxhdGUgPSBjb21waWxlKGl0ZW1UbXBsU291cmNlLmlubmVySFRNTClcblxuICAvLyByZXBsYWNlIHRpdGxlXG4gIGNvbnN0IHRpdGxlRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaXRlLXRpdGxlJylcbiAgaWYgKHRpdGxlRWxlbWVudCkge1xuICAgIHRpdGxlRWxlbWVudC5pbm5lckhUTUwgPSB0aXRsZUVsZW1lbnQuaW5uZXJIVE1MLnJlcGxhY2UoJyUnLCBxdWVyeSlcbiAgfVxuICBkb2N1bWVudC50aXRsZSA9IGRvY3VtZW50LnRpdGxlLnJlcGxhY2UoJyUnLCBxdWVyeSlcblxuICBjb25zdCB1cmwgPSB3aW5kb3cuZ2hvc3QudXJsLmFwaSgncG9zdHMnLCB7IGZpZWxkczogWyd1cmwnLCAndGl0bGUnLCAnZmVhdHVyZV9pbWFnZSddLCBmb3JtYXRzOiAncGxhaW50ZXh0JywgYWJzb2x1dGVfdXJsczogdHJ1ZSB9KVxuICB3aW5kb3cuZmV0Y2godXJsKVxuICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgICAudGhlbihyZXNvdXJjZXMgPT4gd2luZG93LmZ1enp5c29ydC5nb0FzeW5jKHF1ZXJ5LCByZXNvdXJjZXMucG9zdHMsIHtcbiAgICAgIGtleXM6IFsgJ3RpdGxlJyBdLFxuICAgICAgdGhyZXNob2xkOiAtMzUwMCxcbiAgICAgIGFsbG93VHlwbzogZmFsc2VcbiAgICB9KSlcbiAgICAudGhlbihyZXN1bHQgPT4ge1xuICAgICAgcmVzdWx0RWxlbWVudC5pbm5lckhUTUwgPSByZXN1bHQubWFwKGkgPT4gaS5vYmopLm1hcChpdGVtVGVtcGxhdGUpLmpvaW4oJycpXG4gICAgfSlcbiAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5lcnJvcignRmV0Y2ggRXJyb3IgPVxcbicsIGVycm9yKSlcbn0pKHdpbmRvdywgZG9jdW1lbnQpXG4iXSwiZmlsZSI6InNlYXJjaC5qcyJ9
