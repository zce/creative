"use strict";

/**
 * Global scripts
 */
(function (window) {
  var _this = this;

  var document = window.document,
      location = window.location;
  var qs = document.querySelector.bind(document);
  var qsa = document.querySelectorAll.bind(document);

  function loadStyle(href) {
    var linkElement = document.createElement('link');
    linkElement.rel = 'stylesheet';
    linkElement.type = 'text/css';
    linkElement.href = href;
    document.head.appendChild(linkElement);
  }

  function loadScript(src, callback) {
    var scriptElement = document.createElement('script');
    scriptElement.src = src;
    callback && scriptElement.addEventListener('load', callback);
    document.body.appendChild(scriptElement);
  } // // cover
  // qs('.site-cover') || document.body.classList.add('no-cover')
  // search


  var searchElement = qs('#search_input');

  if (searchElement) {
    loadScript('https://unpkg.com/ghost-search/dist/ghost-search.js', function () {
      var resultElement = document.createElement('div');
      resultElement.id = 'search_result';
      resultElement.className = 'dropdown-menu dropdown-menu-right';
      resultElement.innerHTML = "<span class=\"dropdown-item disabled\">".concat(searchElement.placeholder, "...</span>");
      searchElement.parentElement.classList.add('dropdown');
      searchElement.parentElement.appendChild(resultElement);
      /* eslint-disable no-new */

      new window.GhostSearch({
        input: '#search_input',
        results: '#search_result',
        template: function template(item) {
          return "<a class=\"dropdown-item\" href=\"".concat(item.url, "\">").concat(item.title, "</a>");
        },
        api: {
          parameters: {
            fields: ['url', 'title']
          }
        },
        on: {
          afterDisplay: function afterDisplay(results) {
            if (results.total !== 0) return false;
            if (!searchElement.value) return false;
            resultElement.innerHTML = "<span class=\"dropdown-item disabled\">No results</span>";
          }
        }
      });
    });
  } // lazyload


  if (qs('.post-card [data-src]')) {
    loadScript('https://unpkg.com/vanilla-lazyload', function () {
      window.lazyloader = new window.LazyLoad({
        elements_selector: '.post-card [data-src]'
      });
    });
  } // prismjs loader


  var codeElements = qsa('.post-content pre code');

  if (codeElements.length) {
    // code card polyfill
    codeElements.forEach(function (item) {
      if (item.classList.length) return;
      item.classList.add('language-basic');
    });
    loadStyle('https://unpkg.com/prismjs/themes/prism-okaidia.css');
    loadScript('https://unpkg.com/prismjs/prism.js');
  } // gallery flex


  qsa('.kg-gallery-image img').forEach(function (item) {
    var container = item.closest('.kg-gallery-image');
    var width = item.attributes.width.value;
    var height = item.attributes.height.value;
    var ratio = width / height;
    container.style.flex = ratio + ' 1 0%';
  }); // gallery preview

  var galleryElements = qsa('.kg-gallery-container');

  if (galleryElements.length) {
    loadStyle('https://unpkg.com/lightgallery.js/dist/css/lightgallery.min.css');
    loadScript('https://unpkg.com/lightgallery.js/dist/js/lightgallery.js', function () {
      galleryElements.forEach(function (item) {
        item.querySelectorAll('.kg-gallery-image').forEach(function (sub) {
          sub.dataset.src = sub.children[0].src;
        });
        window.lightGallery(item, {
          selector: '.kg-gallery-image'
        });
      });
    });
  } // post share


  qsa('.post-share a').forEach(function (item) {
    return item.addEventListener('click', function (e) {
      window.open(_this.href, 'share-window', 'width=640,height=360');
      e.preventDefault();
    });
  }); // subscribe form hiddens

  qsa('input[name=location]').forEach(function (item) {
    item.value = item.value || location.href;
  });
  qsa('input[name=referrer]').forEach(function (item) {
    item.value = item.value || document.referrer;
  }); // site preloader

  var loader = qs('.site-preloader');

  if (loader) {
    // loader.addEventListener('transitionend', () => {
    //   loader.parentElement.removeChild(loader)
    // })
    loader.style.opacity = 0;
    setTimeout(function () {
      return loader.parentElement.removeChild(loader);
    }, 1000);
  }
})(window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
